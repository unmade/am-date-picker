{"version":3,"sources":["am-date-picker.module.js","am-date-picker.constant.js","am-date-picker.dialog.js","am-date-picker.directive.js","am-date-picker.provider.js","am-date-picker.tmpl.js"],"names":["angular","module","options","constant","DialogController","$timeout","$mdDialog","init","dateMoment","moment","dialog","date","undefined","isOutOfRange","minDate","maxDate","locale","isTodayDisabled","localeData","daysOfWeek","_weekdaysMin","years","minYear","maxYear","y","push","generateCalendar","cancel","displayYearSelection","yearSelection","yearSelector","element","document","querySelector","activeYear","activeYearHeight","offsetHeight","scrollTop","offsetTop","clientHeight","previousDay","clone","cloneMoment","firstDayOfMonth","day","maxDays","endOf","Date","disabled","days","emptyFirstDays","i","j","add","selected","isMoment","isSame","today","hide","toDate","hideYearSelection","isDate","isBefore","isAfter","nextMonth","onNextMonth","monthChanged","next","delay","onPrevMonth","previousMonth","subtract","select","_day","selectYear","_year","year","this","controller","$inject","amDatePicker","bindToController","AmDatePickerController","controllerAs","link","scope","attr","controllers","ngModelCtrl","amDatePickerCtrl","replace","require","restrict","allowClear","backButtonText","cancelButton","inputDateFormat","inputLabel","popupDateFormat","showInputIcon","todayButton","templateUrl","$scope","OPTIONS","amDatePickerConfig","clearDate","$setViewValue","render","clearErrorState","forEach","field","$setValidity","$render","length","hasOwnProperty","isDefined","openPicker","ev","show","locals","$viewValue","nextIcon","prevIcon","parent","body","targetEvent","then","selectedDate","$setTouched","modelMomentFormatted","format","updateErrorState","$watch","newValue","oldValue","directive","config","calendarIcon","clearIcon","setIcons","icons","key","setOptions","$get","amDatePickerService","properties","createProperty","obj","name","value","Object","defineProperty","__proto__","get","property","provider","run","$templateCache","put"],"mappings":"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","file":"am-date-picker.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('am.date-picker', ['ngMaterial', 'ngAnimate']);\n        \n})();\n","(function() {\n    'use strict';\n\n    var options = ['allowClear', 'backButtonText', 'cancelButton', 'inputLabel',\n                   'maxDate', 'minDate', 'maxYear', 'minYear', 'locale',\n                   'inputDateFormat', 'popupDateFormat', 'showInputIcon', 'todayButton',\n                   'calendarIcon', 'prevIcon', 'nextIcon', 'clearIcon'];\n\n    angular\n        .module('am.date-picker')\n        .constant('OPTIONS', options);\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('am.date-picker')\n        .controller('amDatePickerDialogCtrl', DialogController);\n\n    DialogController.$inject = ['$timeout', '$mdDialog'];\n\n    function DialogController($timeout, $mdDialog) {\n        var dialog = this,\n            delay = 110;\n\n        dialog.cancel = cancel;\n        dialog.displayYearSelection = displayYearSelection;\n        dialog.hide = hide;\n        dialog.hideYearSelection = hideYearSelection;\n        dialog.previousMonth = previousMonth;\n        dialog.nextMonth = nextMonth;\n        dialog.select = select;\n        dialog.selectYear = selectYear;\n        dialog.today = today;\n\n        dialog.monthChanged = true;\n        dialog.isTodayDisabled = false;\n        dialog.yearSelection = false;\n\n        init();\n\n        function init() {\n            var dateMoment = moment(dialog.date || undefined);\n\n            dialog.dateMoment = (isOutOfRange(dateMoment)) ? moment(dialog.minDate || dialog.maxDate) : dateMoment;\n            dialog.dateMoment.locale(dialog.locale);\n            dialog.isTodayDisabled = isOutOfRange(moment());\n\n            var localeData = moment.localeData(dialog.locale);\n            dialog.daysOfWeek = [\n                localeData._weekdaysMin[1],\n                localeData._weekdaysMin[2],\n                localeData._weekdaysMin[3],\n                localeData._weekdaysMin[4],\n                localeData._weekdaysMin[5],\n                localeData._weekdaysMin[6],\n                localeData._weekdaysMin[0]\n            ];\n\n            dialog.years = [];\n            var minYear = dialog.minYear || 1920,\n                maxYear = dialog.maxYear || 2020;\n\n            for (var y = minYear; y <= maxYear; y++) {\n                dialog.years.push(y);\n            }\n\n            generateCalendar();\n        }\n\n        function cancel() {\n            $mdDialog.cancel();\n        }\n\n        function displayYearSelection() {\n            dialog.yearSelection = true;\n            $timeout(function() {\n                var yearSelector = angular.element(document.querySelector('.am-date-picker__year-selector')),\n                    activeYear = angular.element(document.querySelector('.am-date-picker__year--is-active')),\n                    activeYearHeight = activeYear[0].offsetHeight;\n\n                yearSelector[0].scrollTop = activeYear[0].offsetTop - yearSelector[0].offsetTop -\n                                            yearSelector[0].clientHeight/2 + activeYearHeight/2;\n            });\n        }\n\n        function generateCalendar() {\n            var previousDay = dialog.dateMoment.clone().date(0),\n                cloneMoment = dialog.dateMoment.clone(),\n                firstDayOfMonth = cloneMoment.date(1).day(),\n                maxDays = cloneMoment.endOf('month').date(),\n                today = new Date(),\n                date;\n\n            dialog.dateMoment.disabled = isOutOfRange(dialog.dateMoment);\n            dialog.days = [];\n            dialog.emptyFirstDays = [];\n\n            for (var i = firstDayOfMonth === 0 ? 6 : firstDayOfMonth - 1; i > 0; i--) {\n                dialog.emptyFirstDays.push({});\n            }\n            for (var j = 0; j < maxDays; j++) {\n                date = previousDay.add(1, 'days').clone();\n                date.disabled = isOutOfRange(date);\n                date.selected = moment.isMoment(dialog.dateMoment) &&\n                    date.isSame(dialog.dateMoment, 'day') && !date.disabled;\n                date.today = date.isSame(moment(), 'day');\n\n                dialog.days.push(date);\n            }\n        }\n\n        function hide() {\n            $mdDialog.hide(dialog.dateMoment.toDate());\n        }\n\n        function hideYearSelection() {\n            dialog.yearSelection = false;\n        }\n\n        function isOutOfRange(dateMoment) {\n            return angular.isDate(dialog.minDate) && dateMoment.isBefore(dialog.minDate, 'day') ||\n                   angular.isDate(dialog.maxDate) && dateMoment.isAfter(dialog.maxDate, 'day');\n        }\n\n        function nextMonth() {\n            dialog.dateMoment.add(1, 'month');\n            generateCalendar();\n            onNextMonth();\n        }\n\n        function onNextMonth() {\n            dialog.monthChanged = false;\n            dialog.next = true;\n            $timeout(function() {\n                dialog.monthChanged = true;\n            }, delay);\n        }\n\n        function onPrevMonth() {\n            dialog.next = false;\n            dialog.monthChanged = false;\n            $timeout(function() {\n                dialog.monthChanged = true;\n            }, delay);\n        }\n\n        function previousMonth() {\n            dialog.dateMoment.subtract(1, 'month');\n            generateCalendar();\n            onPrevMonth();\n        }\n\n        function today() {\n            if (dialog.yearSelection) { dialog.hideYearSelection(); }\n            dialog.select((dialog.locale) ? moment().locale(dialog.locale) : moment());\n        }\n\n        function select(_day) {\n            if (_day.disabled) return;\n            dialog.dateMoment = _day;\n            generateCalendar();\n        }\n\n        function selectYear(_year) {\n            dialog.hideYearSelection();\n            select(dialog.dateMoment.year(_year));\n            generateCalendar();\n        }\n    }\n\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('am.date-picker')\n        .directive('amDatePicker', amDatePicker)\n\n    function amDatePicker() {\n        return {\n            bindToController: true,\n            controller: AmDatePickerController,\n            controllerAs: 'amDatePicker',\n            link: function(scope, element, attr, controllers) {\n                var ngModelCtrl = controllers[0],\n                    amDatePickerCtrl = controllers[1];\n                amDatePickerCtrl.init(ngModelCtrl);\n            },\n            replace: true,\n            require: ['ngModel', 'amDatePicker'],\n            restrict: 'AE',\n            scope:\n            {\n                allowClear: '=?amAllowClear',\n                backButtonText: '@?amBackButtonText',\n                cancelButton: '@?amCancelButton',\n                inputDateFormat: '@?amInputDateFormat',\n                inputLabel: '@?amInputLabel',\n                locale: '@?amLocale',\n                maxDate: '=?amMaxDate',\n                minDate: '=?amMinDate',\n                maxYear: '=?amMaxYear',\n                minYear: '=?amMinYear',\n                popupDateFormat: '@?amPopupDateFormat',\n                showInputIcon: '=?amShowInputIcon',\n                todayButton: '@?amTodayButton'\n            },\n            templateUrl: 'am-date-picker.html'\n        };\n    }\n\n    AmDatePickerController.$inject = ['$scope', '$timeout', '$mdDialog', 'OPTIONS', 'amDatePickerConfig'];\n\n    function AmDatePickerController($scope, $timeout, $mdDialog, OPTIONS, amDatePickerConfig) {\n        var amDatePicker = this;\n\n        amDatePicker.clearDate = clearDate;\n        amDatePicker.init = init;\n        amDatePicker.openPicker = openPicker;\n\n        amDatePicker.ngModelCtrl = null;\n\n        $scope.$watch(\"amDatePicker.minDate\", function(newValue, oldValue) {\n            var date = amDatePicker.ngModelCtrl.$viewValue,\n                dateMoment = moment(date);\n            if (date && newValue && dateMoment.isBefore(newValue, 'day')) {\n                amDatePicker.ngModelCtrl.$setViewValue(newValue);\n                render();\n            }\n            else {\n                updateErrorState();\n            }\n        });\n\n        $scope.$watch(\"amDatePicker.maxDate\", function(newValue, oldValue) {\n            var date = amDatePicker.ngModelCtrl.$viewValue,\n                dateMoment = moment(date);\n            if (date && newValue && dateMoment.isAfter(newValue, 'day')) {\n                amDatePicker.ngModelCtrl.$setViewValue(newValue);\n                render();\n            }\n            else {\n                updateErrorState();\n            }\n        });\n\n        function clearDate() {\n            amDatePicker.ngModelCtrl.$setViewValue(undefined);\n            render();\n        }\n\n        function clearErrorState() {\n            ['minDate', 'maxDate', 'valid'].forEach(function(field) {\n                amDatePicker.ngModelCtrl.$setValidity(field, true);\n            }, amDatePicker);\n        }\n\n        function init(ngModelCtrl) {\n            amDatePicker.ngModelCtrl = ngModelCtrl;\n\n            ngModelCtrl.$render = render;\n\n            for (var i = 0; i < OPTIONS.length; i++) {\n                if (amDatePickerConfig.hasOwnProperty(OPTIONS[i]) &&\n                        !angular.isDefined(amDatePicker[OPTIONS[i]])) {\n                    amDatePicker[OPTIONS[i]] = amDatePickerConfig[OPTIONS[i]];\n                }\n            }\n        }\n\n        function openPicker(ev) {\n            $mdDialog.show({\n                bindToController: true,\n                controller: 'amDatePickerDialogCtrl',\n                controllerAs: 'dialog',\n                locals: {\n                    backButtonText: amDatePicker.backButtonText,\n                    cancelButton: amDatePicker.cancelButton,\n                    date: amDatePicker.ngModelCtrl.$viewValue,\n                    maxDate: amDatePicker.maxDate,\n                    maxYear: amDatePicker.maxYear,\n                    minDate: amDatePicker.minDate,\n                    minYear: amDatePicker.minYear,\n                    nextIcon: amDatePicker.nextIcon,\n                    locale: amDatePicker.locale,\n                    popupDateFormat: amDatePicker.popupDateFormat,\n                    prevIcon: amDatePicker.prevIcon,\n                    todayButton: amDatePicker.todayButton\n                },\n                parent: angular.element(document.body),\n                targetEvent: ev,\n                templateUrl: 'am-date-picker_content.tmpl.html'\n            }).then(function(selectedDate) {\n                amDatePicker.ngModelCtrl.$setViewValue(selectedDate);\n                amDatePicker.ngModelCtrl.$setTouched();\n                render();\n            }, function() {\n                amDatePicker.ngModelCtrl.$setTouched();\n            });\n        }\n\n        function render() {\n            var date = amDatePicker.ngModelCtrl.$viewValue;;\n            amDatePicker.modelMomentFormatted = (angular.isDate(date)) ?\n                moment(date).locale(amDatePicker.locale).format(amDatePicker.inputDateFormat) :\n                    undefined;\n            updateErrorState();\n        }\n\n        function updateErrorState() {\n            var date = amDatePicker.ngModelCtrl.$viewValue,\n                dateMoment,\n                isAfter, isBefore;\n            clearErrorState();\n            if (angular.isDate(date)) {\n                dateMoment = moment(date);\n                isAfter = dateMoment.isAfter(amDatePicker.minDate, 'day') ||\n                          dateMoment.isSame(amDatePicker.minDate, 'day');\n                isBefore = dateMoment.isBefore(amDatePicker.maxDate, 'day') ||\n                           dateMoment.isSame(amDatePicker.maxDate, 'day');\n                amDatePicker.ngModelCtrl.$setValidity('minDate', !moment.isDate(amDatePicker.minDate) || isAfter);\n                amDatePicker.ngModelCtrl.$setValidity('maxDate', !moment.isDate(amDatePicker.maxDate) || isBefore);\n            }\n            else {\n                amDatePicker.ngModelCtrl.$setValidity('valid', date == null);\n            }\n        }\n    }\n\n})();\n","(function () {\n    'use strict';\n\n    angular\n        .module('am.date-picker')\n        .provider('amDatePickerConfig', amDatePickerConfig);\n\n    amDatePickerConfig.$inject = ['OPTIONS'];\n\n    function amDatePickerConfig(OPTIONS) {\n        var config = this;\n        config.allowClear = true;\n        config.backButtonText = \"Back\";\n        config.inputDateFormat = 'LL';\n        config.maxYear = 2020;\n        config.minYear = 1920;\n        config.locale = 'en';\n        config.popupDateFormat = 'ddd, MMM D';\n        config.showInputIcon = false;\n\n        /* Icons */\n        config.calendarIcon = '/dist/images/icons/ic_today_24px.svg';\n        config.clearIcon = '/dist/images/icons/ic_close_24px.svg';\n        config.nextIcon = '/dist/images/icons/ic_chevron_right_18px.svg';\n        config.prevIcon = '/dist/images/icons/ic_chevron_left_18px.svg';\n\n        config.setIcons = function(icons) {\n            for (var key in icons) {\n                config[key] = icons[key];\n            }\n        }\n\n        config.setOptions = function(options) {\n            for (var key in options) {\n                config[key] = options[key];\n            }\n         }\n\n        this.$get = function () {\n            return new amDatePickerService(OPTIONS, config);\n        };\n\n    }\n\n\n    function amDatePickerService(properties, config){\n        for(var property in properties){\n            createProperty(this, properties[property], config[properties[property]]);\n        }\n\n        function createProperty(obj, name, value){\n            Object.defineProperty(obj, name, {\n                __proto__: null,\n                get: function(){\n                    return value;\n                }\n            });\n        }\n    }\n\n})();\n","angular.module(\"am.date-picker\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"am-date-picker.html\",\"<div style=\\\"outline-style: none;\\\">\\n    <!-- Date picker input -->\\n    <div>\\n        <md-input-container ng-class=\\\"{\\'md-has-icon\\': amDatePicker.showInputIcon &&\\n                                                      (amDatePicker.showInputIcon || amDatePicker.allowClear) }\\\">\\n            <label>{{ amDatePicker.inputLabel }}</label>\\n\\n            <input ng-model=\\\"amDatePicker.modelMomentFormatted\\\"\\n                   ng-click=\\\"amDatePicker.openPicker($event)\\\"\\n                   class=\\\"am-date-picker__input\\\"\\n                   type=\\\"text\\\"\\n                   readonly=\\\"readonly\\\">\\n            <div class=\\\"am-date-picker__expand-icon\\\" ng-if=\\\"amDatePicker.showInputIcon\\\">\\n                <md-button ng-click=\\\"amDatePicker.openPicker($event)\\\"\\n                           aria-label=\\\"Clear\\\">\\n                    <span>btn</span>\\n                </md-button>\\n            </div>\\n            <div class=\\\"am-date-picker__clear-icon\\\" ng-if=\\\"amDatePicker.allowClear\\\">\\n                <md-button ng-click=\\\"amDatePicker.clearDate()\\\"\\n                           aria-label=\\\"Clear\\\">\\n                    <span>btn</span>\\n                </md-button>\\n            </div>\\n        </md-input-container>\\n    </div>\\n\\n\\n<script type=\\\"text/ng-template\\\" id=\\\"am-date-picker_content.tmpl.html\\\">\\n    <md-dialog class=\\\"am-date-picker__container\\\" aria-label=\\\"Datepicker Content\\\" ng-cloak>\\n    <div layout=\\\"column\\\">\\n\\n        <!-- Current date -->\\n        <md-toolbar class=\\\"am-date-picker__header-current-date\\\">\\n            <div layout=\\\"column\\\" layout-align=\\\"center start\\\">\\n                <p class=\\\"md-subhead\\\">{{ dialog.dateMoment.format(\\'YYYY\\') }}</p>\\n                <h2 class=\\\"md-title\\\">{{ dialog.dateMoment.format(dialog.popupDateFormat) }}</h2>\\n            </div>\\n        </md-toolbar>\\n\\n    </div>\\n\\n    <!-- Date picker: content -->\\n    <div ng-hide=\\\"dialog.yearSelection\\\" class=\\\"am-date-picker__content am-date-picker__animate-year-selection\\\">\\n        <div layout=\\\"row\\\" layout-align=\\\"space-between center\\\" class=\\\"am-date-picker__month-year\\\">\\n            <md-button ng-click=\\\"dialog.previousMonth()\\\"\\n                       class=\\\"md-icon-button\\\"\\n                       aria-label=\\\"Prev Month Button\\\">\\n                <md-icon aria-label=\\\"Prev\\\"\\n                         class=\\\"am-date-picker__chevron\\\"\\n                         md-svg-icon=\\\"{{ dialog.prevIcon }}\\\"></md-icon>\\n\\n            </md-button>\\n\\n            <md-button ng-click=\\\"dialog.displayYearSelection()\\\"\\n                       class=\\\"md-primary am-date-picker__month-year\\\">\\n                {{ dialog.dateMoment.format(\\'MMMM YYYY\\') }}\\n            </md-button>\\n\\n             <md-button ng-click=\\\"dialog.nextMonth()\\\"\\n                        class=\\\"md-icon-button\\\"\\n                        aria-label=\\\"Next Month Button\\\">\\n                <md-icon aria-label=\\\"Next\\\"\\n                         class=\\\"am-date-picker__chevron\\\"\\n                         md-svg-icon=\\\"{{ dialog.nextIcon }}\\\"></md-icon>\\n            </md-button>\\n        </div>\\n\\n        <!-- Calendar -->\\n        <div class=\\\"am-date-picker__calendar am-date-picker__animate-month-change\\\"\\n             ng-class=\\\"{\\'next\\': dialog.next,\\n                        \\'prev\\': !dialog.next}\\\"\\n             ng-if=\\\"dialog.monthChanged\\\">\\n\\n            <!-- Weekdays -->\\n            <div class=\\\"am-date-picker__weekdays\\\" layout layout-align=\\\"space-between\\\">\\n                <span ng-repeat=\\\"day in dialog.daysOfWeek\\\">{{ day }}</span>\\n            </div>\\n\\n            <!-- Days -->\\n            <span class=\\\"am-date-picker__empty-days\\\"\\n                  ng-repeat=\\\"x in dialog.emptyFirstDays\\\">&nbsp;</span>\\n\\n            <div class=\\\"am-date-picker__days\\\">\\n                <md-button class=\\\"md-primary md-icon-button\\\"\\n                    ng-class=\\\"{\\'am-date-picker__day--is-selected md-fab\\' : day.selected,\\n                               \\'am-date-picker__day--is-today\\': day.today && !day.selected}\\\"\\n                    ng-repeat=\\\"day in dialog.days\\\"\\n                    ng-disabled=\\\"day.disabled\\\"\\n                    ng-click=\\\"dialog.select(day)\\\">{{ day ? day.format(\\'D\\') : \\'\\' }}</md-button>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n    <!-- Year selection -->\\n    <div class=\\\"am-date-picker__year-selector am-date-picker__animate-year-selection\\\"\\n         ng-show=\\\"dialog.yearSelection\\\">\\n        <div class=\\\"am-date-picker__year\\\"\\n             ng-repeat=\\\"year in dialog.years\\\">\\n            <md-button class=\\\"md-primary md-icon-button\\\"\\n                       ng-class=\\\"{ \\'am-date-picker__year--is-active md-fab md-mini\\':\\n                                        year == dialog.dateMoment.format(\\'YYYY\\') }\\\"\\n                       ng-click=\\\"dialog.selectYear(year)\\\">\\n                {{ year }}\\n            </md-button>\\n        </div>\\n    </div>\\n\\n    <!--Actions-->\\n    <md-dialog-actions layout=\\\"row\\\" class=\\\"am-date-picker__actions\\\">\\n        <md-button ng-click=\\\"dialog.today()\\\"\\n                   ng-disabled=\\\"dialog.isTodayDisabled\\\"\\n                   ng-if=\\\"dialog.todayButton\\\"\\n                   class=\\\"md-primary\\\">\\n            {{ dialog.todayButton }}\\n        </md-button>\\n        <span flex></span>\\n        <div ng-if=\\\"!dialog.yearSelection\\\">\\n            <md-button ng-click=\\\"dialog.cancel()\\\"\\n                       ng-if=\\\"dialog.cancelButton\\\"\\n                       class=\\\"md-primary\\\">\\n                {{ dialog.cancelButton }}\\n            </md-button>\\n\\n            <md-button ng-click=\\\"dialog.hide()\\\"\\n                       ng-disabled=\\\"dialog.dateMoment.disabled\\\"\\n                       class=\\\"md-primary\\\">\\n                OK\\n            </md-button>\\n        </div>\\n\\n        <md-button ng-click=\\\"dialog.hideYearSelection()\\\"\\n                   ng-if=\\\"dialog.yearSelection\\\"\\n                   class=\\\"md-primary\\\">\\n               {{ dialog.backButtonText }}\\n        </md-button>\\n    </md-dialog-actions>\\n    </md-dialog>\\n</script>\\n\\n</div>\\n\");}]);"]}